// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using appGabrielMontoya.Data;

#nullable disable

namespace appGabrielMontoya.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250514032110_Correccion tabla FondoMonetario")]
    partial class CorrecciontablaFondoMonetario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("appGabrielMontoya.Models.Deposito", b =>
                {
                    b.Property<int>("DepositoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositoId"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("DepositoId");

                    b.HasIndex("FondoMonetarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.FondoMonetario", b =>
                {
                    b.Property<int>("FondoMonetarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FondoMonetarioId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("FondoMonetarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("FondosMonetarios");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.GastoDetalle", b =>
                {
                    b.Property<int>("GastoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GastoDetalleId"));

                    b.Property<int>("GastoEncabezadoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.HasKey("GastoDetalleId");

                    b.HasIndex("GastoEncabezadoId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("GastoDetalles");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.GastoEncabezado", b =>
                {
                    b.Property<int>("GastoEncabezadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GastoEncabezadoId"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoMonetarioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("GastoEncabezadoId");

                    b.HasIndex("FondoMonetarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("GastosEncabezados");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.Presupuesto", b =>
                {
                    b.Property<int>("PresupuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PresupuestoId"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PresupuestoId");

                    b.HasIndex("TipoGastoId");

                    b.HasIndex("UsuarioId", "TipoGastoId", "Mes", "Anio")
                        .IsUnique();

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.TipoGasto", b =>
                {
                    b.Property<int>("TipoGastoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoGastoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("TipoGastoId");

                    b.ToTable("TiposGasto");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.Deposito", b =>
                {
                    b.HasOne("appGabrielMontoya.Models.FondoMonetario", "FondoMonetario")
                        .WithMany("Depositos")
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("appGabrielMontoya.Models.Usuario", "Usuario")
                        .WithMany("Depositos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FondoMonetario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.FondoMonetario", b =>
                {
                    b.HasOne("appGabrielMontoya.Models.Usuario", "Usuario")
                        .WithMany("FondosMonetarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.GastoDetalle", b =>
                {
                    b.HasOne("appGabrielMontoya.Models.GastoEncabezado", "GastoEncabezado")
                        .WithMany("GastoDetalles")
                        .HasForeignKey("GastoEncabezadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appGabrielMontoya.Models.TipoGasto", "TipoGasto")
                        .WithMany("GastoDetalles")
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GastoEncabezado");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.GastoEncabezado", b =>
                {
                    b.HasOne("appGabrielMontoya.Models.FondoMonetario", "FondoMonetario")
                        .WithMany("GastosEncabezados")
                        .HasForeignKey("FondoMonetarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("appGabrielMontoya.Models.Usuario", "Usuario")
                        .WithMany("GastosEncabezados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FondoMonetario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.Presupuesto", b =>
                {
                    b.HasOne("appGabrielMontoya.Models.TipoGasto", "TipoGasto")
                        .WithMany("Presupuestos")
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("appGabrielMontoya.Models.Usuario", "Usuario")
                        .WithMany("Presupuestos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoGasto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.FondoMonetario", b =>
                {
                    b.Navigation("Depositos");

                    b.Navigation("GastosEncabezados");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.GastoEncabezado", b =>
                {
                    b.Navigation("GastoDetalles");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.TipoGasto", b =>
                {
                    b.Navigation("GastoDetalles");

                    b.Navigation("Presupuestos");
                });

            modelBuilder.Entity("appGabrielMontoya.Models.Usuario", b =>
                {
                    b.Navigation("Depositos");

                    b.Navigation("FondosMonetarios");

                    b.Navigation("GastosEncabezados");

                    b.Navigation("Presupuestos");
                });
#pragma warning restore 612, 618
        }
    }
}
